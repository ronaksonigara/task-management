{"version":3,"sources":["serviceWorker.js","redux/Task/types.js","redux/Task/reducer.js","redux/root-reducer.js","redux/store.js","component/CardContainer/style.js","container/DragableContainer/style.js","component/Card/style.js","util/helper.js","component/Card/index.js","component/CardContainer/index.js","component/ModalForm/style.js","component/ModalForm/index.js","redux/Task/action.js","container/DragableContainer/index.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","TASk_TYPES","INITIAL_STATE","todo","title","description","users","comments","attachments","estimateDate","Date","image","inProgress","inReview","done","tasks","state","action","type","payload","rootReducer","combineReducers","middleware","ReduxThunk","store","createStore","composeWithDevTools","applyMiddleware","CardContainerWrapper","styled","div","CardContainerStyled","CardContainerTitle","h2","CardContainerDropable","DragableContainerWrapper","CardWrapperStyled","CardTitle","h3","CardFooter","EstimateDate","span","props","overTime","Comments","Attachments","User","UserWrapper","CardBody","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","overEsitmation","name","date","estimationDate","toDateString","Card","forwardRef","ref","item","rest","src","alt","icon","faCheck","faBell","value","formatedDate","toLocaleString","month","day","split","estimateDateFormat","length","faComment","faPaperclip","map","key","nameArr","trim","nameFormat","CardContainer","provided","snapshot","innerRef","draggableId","draggableProps","dragHandleProps","placeholder","FloatingAddButton","button","layout","labelCol","wrapperCol","tailLayout","offset","ModalForm","useState","modalOpen","setModalOpen","dispatch","useDispatch","onClick","faPlus","color","footer","visible","onCancel","onFinish","values","data","console","log","a","onFinishFailed","errorInfo","initialValues","remember","Item","label","rules","required","TextArea","mode","style","width","Option","disabledDate","current","format","moment","htmlType","DragableContainer","useSelector","onDragEnd","items","reorderList","moveList","Object","keys","renderCardContainer","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d76cf48f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const TASk_TYPES = {\r\n  REORDER: 'REORDER',\r\n  ADD_TASK: 'ADD_TASK'\r\n};\r\n","import { TASk_TYPES } from './types';\r\n\r\nconst INITIAL_STATE = {\r\n  todo: [\r\n    {\r\n      title: 'Prepare Mother Board for website',\r\n      description: '',\r\n      users: ['abc a'],\r\n      comments: ['abc'],\r\n      attachments: ['a'],\r\n      estimateDate: new Date(),\r\n      image:\r\n        'https://media.sproutsocial.com/uploads/2017/02/10x-featured-social-media-image-size.png'\r\n    },\r\n    {\r\n      title: 'Prepare Mother Board for website',\r\n      description: '',\r\n      users: ['abc a'],\r\n      estimateDate: new Date('10/10/2019')\r\n    },\r\n    {\r\n      title: 'Prepare Mother Board for website',\r\n      description: '',\r\n      users: ['abc a'],\r\n      estimateDate: ''\r\n    }\r\n  ],\r\n  inProgress: [\r\n    {\r\n      title: 'Prepare Mother Board for website',\r\n      description: '',\r\n      users: ['abc a'],\r\n      estimateDate: ''\r\n    }\r\n  ],\r\n  inReview: [],\r\n  done: []\r\n};\r\n\r\nconst tasks = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case TASk_TYPES.REORDER:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    case TASk_TYPES.ADD_TASK:\r\n      return {\r\n        ...state,\r\n        todo: [...state.todo, action.payload]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tasks;\r\n","import { combineReducers } from 'redux';\r\nimport tasks from './Task/reducer';\r\nconst rootReducer = combineReducers({\r\n  tasks\r\n});\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './root-reducer';\r\n\r\nconst middleware = [ReduxThunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import styled from 'styled-components';\r\n\r\nexport const CardContainerWrapper = styled.div`\r\n  display: flex;\r\n  flex-grow: 1;\r\n  padding: 5px;\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport const CardContainerStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px 10px 0 10px;\r\n  min-width: 300px;\r\n  background-color: #e5e5e5;\r\n  border-radius: 4px;\r\n`;\r\nexport const CardContainerTitle = styled.h2`\r\n  font-weight: 700;\r\n  font-size: 16px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const CardContainerDropable = styled.div`\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { CardContainerWrapper } from '../../component/CardContainer/style';\r\n\r\nexport const DragableContainerWrapper = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n  overflow-x: auto;\r\n  ${CardContainerWrapper} {\r\n    &:first-child {\r\n      margin-left: 5px;\r\n    }\r\n    &:last-child {\r\n      margin-right: 5px;\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const CardWrapperStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 4px;\r\n  background-color: #fff;\r\n  min-width: 280px;\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const CardTitle = styled.h3`\r\n  font-weight: 700;\r\n  padding-left: 10px;\r\n  border-left: 3px solid #f00;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const CardFooter = styled.div`\r\n  display: flex;\r\n  padding-left: 8px;\r\n  padding-right: 8px;\r\n`;\r\n\r\nexport const EstimateDate = styled.span`\r\n  font-size: 12px;\r\n  padding: 4px;\r\n  background-color: ${(props) =>\r\n    props.overTime ? '#f00' : props.done ? '#44c349' : '#e5e5e5'};\r\n  color: ${(props) => (props.overTime || props.done ? '#fff' : '#000')};\r\n  border-radius: 4px;\r\n  margin-right: 2px;\r\n  margin-left: 2px;\r\n  span {\r\n    display: inline-block;\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n\r\nexport const Comments = styled.span`\r\n  font-size: 12px;\r\n  padding: 4px;\r\n  background-color: #e5e5e5;\r\n  border-radius: 4px;\r\n  margin-right: 2px;\r\n  margin-left: 2px;\r\n  span {\r\n    display: inline-block;\r\n    margin-left: 5px;\r\n  }\r\n`;\r\nexport const Attachments = styled(Comments)``;\r\n\r\nexport const User = styled(Comments)``;\r\nexport const UserWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const CardBody = styled.div`\r\n  width: 100%;\r\n  height: 150px;\r\n  margin-bottom: 10px;\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n","export const reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nexport const move = (\r\n  source,\r\n  destination,\r\n  droppableSource,\r\n  droppableDestination\r\n) => {\r\n  const sourceClone = Array.from(source);\r\n  const destClone = Array.from(destination);\r\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n  destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n  const result = {};\r\n  result[droppableSource.droppableId] = sourceClone;\r\n  result[droppableDestination.droppableId] = destClone;\r\n\r\n  return result;\r\n};\r\n\r\nexport const randomColoricker = () => {\r\n  const value = Math.floor(Math.random() * Math.floor(2));\r\n  if (value) {\r\n    return '#ffe500';\r\n  }\r\n  return '#f00';\r\n};\r\n\r\nexport const estimateDateFormat = (date) => {\r\n  let value = new Date(new Date(date).toDateString());\r\n  if (value) {\r\n    const formatedDate = value\r\n      .toLocaleString('default', { month: 'short', day: '2-digit' })\r\n      .split(' ');\r\n\r\n    return `${formatedDate[1]}, ${formatedDate[0]}`;\r\n  }\r\n  return value;\r\n};\r\n\r\nexport const nameFormat = (name) => {\r\n  const nameArr = name.trim().split(' ');\r\n  if (nameArr.length > 1) {\r\n    return nameArr[0][0] + nameArr[1][0];\r\n  }\r\n  return nameArr[0][0] + nameArr[0][1];\r\n};\r\n\r\nexport const overEsitmation = (name, date) => {\r\n  const estimationDate = new Date(new Date(date).toDateString());\r\n  const today = new Date(new Date().toDateString());\r\n  if (today > estimationDate && (name === 'todo' || name === 'inProgress')) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n","import React, { forwardRef } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBell, faComment } from '@fortawesome/free-regular-svg-icons';\r\nimport { faPaperclip, faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n  CardWrapperStyled,\r\n  CardTitle,\r\n  CardFooter,\r\n  EstimateDate,\r\n  Comments,\r\n  Attachments,\r\n  User,\r\n  UserWrapper,\r\n  CardBody\r\n} from './style';\r\nimport {\r\n  estimateDateFormat,\r\n  nameFormat,\r\n  overEsitmation\r\n} from '../../util/helper';\r\nconst Card = forwardRef((props, ref) => {\r\n  const { item, name, ...rest } = props;\r\n  return (\r\n    <CardWrapperStyled {...rest} ref={ref}>\r\n      <CardTitle>{item.title}</CardTitle>\r\n      {item.image && (\r\n        <CardBody>\r\n          <img src={item.image} alt='' />\r\n        </CardBody>\r\n      )}\r\n      <CardFooter>\r\n        {item.estimateDate && (\r\n          <EstimateDate\r\n            overTime={overEsitmation(name, item.estimateDate)}\r\n            done={name === 'done'}\r\n          >\r\n            <FontAwesomeIcon icon={name === 'done' ? faCheck : faBell} />\r\n            <span>{estimateDateFormat(item.estimateDate)}</span>\r\n          </EstimateDate>\r\n        )}\r\n\r\n        {item.comments && item.comments.length > 0 && (\r\n          <Comments>\r\n            <FontAwesomeIcon icon={faComment} />\r\n            <span>{item.comments.length}</span>\r\n          </Comments>\r\n        )}\r\n        {item.attachments && item.attachments.length > 0 && (\r\n          <Attachments>\r\n            <FontAwesomeIcon icon={faPaperclip} />\r\n            <span>{item.attachments.length}</span>\r\n          </Attachments>\r\n        )}\r\n        {item.users && item.users.length > 0 && (\r\n          <UserWrapper>\r\n            {item.users.map((item, index) => (\r\n              <User key={index}>{nameFormat(item)}</User>\r\n            ))}\r\n          </UserWrapper>\r\n        )}\r\n      </CardFooter>\r\n    </CardWrapperStyled>\r\n  );\r\n});\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nimport {\r\n  CardContainerStyled,\r\n  CardContainerWrapper,\r\n  CardContainerTitle,\r\n  CardContainerDropable\r\n} from './style';\r\nimport Card from '../Card';\r\n\r\nconst title = {\r\n  todo: 'ToDo',\r\n  inProgress: 'In Progress',\r\n  inReview: 'In Review',\r\n  done: 'Done'\r\n};\r\n\r\nconst CardContainer = (props) => {\r\n  const { type, name } = props;\r\n  return (\r\n    <CardContainerWrapper>\r\n      <CardContainerStyled>\r\n        <CardContainerTitle>{title[name]}</CardContainerTitle>\r\n        <Droppable droppableId={name}>\r\n          {(provided, snapshot) => (\r\n            <CardContainerDropable ref={provided.innerRef}>\r\n              {type.map((item, index) => (\r\n                <Draggable\r\n                  key={index}\r\n                  draggableId={`${name}-${index}`}\r\n                  index={index}\r\n                >\r\n                  {(provided, snapshot) => (\r\n                    <Card\r\n                      item={item}\r\n                      name={name}\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                    />\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </CardContainerDropable>\r\n          )}\r\n        </Droppable>\r\n      </CardContainerStyled>\r\n    </CardContainerWrapper>\r\n  );\r\n};\r\n\r\nexport default CardContainer;\r\n","import styled from 'styled-components';\r\nexport const FloatingAddButton = styled.button`\r\n  display: inline-block;\r\n  position: fixed;\r\n  bottom: 30px;\r\n  right: 10px;\r\n  height: 50px;\r\n  width: 50px;\r\n  border-radius: 50px;\r\n  background-color: blue;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  z-index: 2;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { Modal, Form, Input, Button, Select, DatePicker } from 'antd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FloatingAddButton } from './style';\r\nimport { useDispatch } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { addTask } from '../../redux/Task/action';\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8\r\n  },\r\n  wrapperCol: {\r\n    span: 16\r\n  }\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16\r\n  }\r\n};\r\n\r\nconst users = ['User A', 'User B', 'User C', 'User D'];\r\n\r\nconst ModalForm = (props) => {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const handleAdd = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const handleSubmit = () => {};\r\n  const onFinish = (values) => {\r\n    console.log('Success:', values);\r\n    dispatch(addTask(values));\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  return (\r\n    <>\r\n      <FloatingAddButton onClick={handleAdd}>\r\n        <FontAwesomeIcon icon={faPlus} color='#fff' />\r\n      </FloatingAddButton>\r\n      <Modal\r\n        footer={null}\r\n        title='Add Task'\r\n        visible={modalOpen}\r\n        onCancel={() => setModalOpen(false)}\r\n      >\r\n        <Form\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          {...layout}\r\n          name='basic'\r\n          initialValues={{\r\n            remember: true\r\n          }}\r\n        >\r\n          <Form.Item\r\n            label='Title'\r\n            name='title'\r\n            rules={[\r\n              {\r\n                required: true\r\n              }\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name='description'\r\n            label='Description'\r\n            rules={[\r\n              {\r\n                required: true\r\n              }\r\n            ]}\r\n          >\r\n            <Input.TextArea />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            rules={[\r\n              {\r\n                required: true\r\n              }\r\n            ]}\r\n            name='users'\r\n            label='Users'\r\n          >\r\n            <Select\r\n              mode='multiple'\r\n              style={{ width: '100%' }}\r\n              placeholder='Please select'\r\n              // defaultValue={['a10', 'c12']}\r\n              // onChange={handleChange}\r\n            >\r\n              {users.map((item, index) => (\r\n                <Select.Option value={item} key={index}>\r\n                  {item}\r\n                </Select.Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name='estimateDate'\r\n            label='Estimate Date'\r\n            rules={[\r\n              {\r\n                required: true\r\n              }\r\n            ]}\r\n          >\r\n            <DatePicker\r\n              disabledDate={(current) => {\r\n                return (\r\n                  current.format('YYYY-MM-DD') < moment().format('YYYY-MM-DD')\r\n                );\r\n              }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item {...tailLayout}>\r\n            <Button type='primary' htmlType='submit' onClick={handleSubmit}>\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalForm;\r\n","import { TASk_TYPES } from './types';\r\nimport { reorder, move } from '../../util/helper';\r\n\r\nexport const reorderList = (source, destination, state) => async (dispatch) => {\r\n  const items = reorder(\r\n    state[source.droppableId],\r\n    source.index,\r\n    destination.index\r\n  );\r\n  const data = { [source.droppableId]: items };\r\n  dispatch({\r\n    type: TASk_TYPES.REORDER,\r\n    payload: data\r\n  });\r\n};\r\n\r\nexport const moveList = (source, destination, state) => async (dispatch) => {\r\n  const result = move(\r\n    state[source.droppableId],\r\n    state[destination.droppableId],\r\n    source,\r\n    destination\r\n  );\r\n  dispatch({\r\n    type: TASk_TYPES.REORDER,\r\n    payload: result\r\n  });\r\n};\r\n\r\nexport const addTask = (data) => async (dispatch) => {\r\n  console.log(data);\r\n  dispatch({\r\n    type: TASk_TYPES.ADD_TASK,\r\n    payload: data\r\n  });\r\n};\r\n","import React from 'react';\r\n\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { DragableContainerWrapper } from './style';\r\nimport CardContainer from '../../component/CardContainer';\r\nimport { reorderList, moveList } from '../../redux/Task/action';\r\n\r\nimport ModalForm from '../../component/ModalForm';\r\n\r\nconst renderCardContainer = (tasks) => {\r\n  return Object.keys(tasks).map((item, index) => (\r\n    <CardContainer key={index} type={tasks[item]} name={item} />\r\n  ));\r\n};\r\n\r\nconst DragableContainer = (props) => {\r\n  const tasks = useSelector((state) => state.tasks);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDragEnd = (result) => {\r\n    const { source, destination } = result;\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    if (source.droppableId === destination.droppableId) {\r\n      dispatch(reorderList(source, destination, tasks));\r\n    } else {\r\n      dispatch(moveList(source, destination, tasks));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DragableContainerWrapper>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        {renderCardContainer(tasks)}\r\n      </DragDropContext>\r\n\r\n      <ModalForm />\r\n    </DragableContainerWrapper>\r\n  );\r\n};\r\n\r\nexport default DragableContainer;\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport './style/index.scss';\n\n// import DragAndDrop from './container/DragAndDrop';\nimport DragableContainer from './container/DragableContainer';\n// import CardContainer from './component/CardContainer';\n// import Card from './component/Card';\nfunction App() {\n  return (\n    <Provider store={store}>\n      <DragableContainer />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './style/reset.scss';\nimport 'antd/dist/antd.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}